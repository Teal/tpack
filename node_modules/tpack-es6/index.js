
/**
 * ES6 解析插件。
 * @this 支持扩展以下字段：
 * * @property {Boolean|Object} [sourceMap=false] 是否生成 SourceMap。如果为对象，则内部配置 SourceMap 的相关配置：
 * * * @property {Boolean} [sourceMapFileInline=false] 是否内联 SourceMap。
 * @param {ProjectFile} file 当前正在生成的文件。可用于获取文件内容和路径。
 * @param {ProjectBuilder} builder 当前生成器。存储生成的相关配置。
 * @returns {Array|String} 返回生成的内容数组。 
 */
module.exports = function (file, builder) {
    var babel = require('babel');

    var babelOptions = {
        filename: file.src,
        filenameRelative: builder.src,
        sourceMap: this.sourceMap,
        plugins: []
    };

    babelOptions.jsxPragma = "";

    babelOptions.plugins.push({
        transformer: htmlLikeString,
        position: 'after'
    });

    var res = babel.transform(file.content, babelOptions);
    return res.code;
};

function htmlLikeString(obj) {
    var t = obj.types;
    return new obj.Plugin("plugin-example", {
        visitor: {
            //JSXOpeningElement: function (node, parent, scope, file) {
            //    console.log(file)
            //},
            //FunctionDeclaration: function (node, parent) {
            //    var id = node.id;
            //    node.type = "FunctionExpression";
            //    node.id = null;

            //    return t.variableDeclaration("var", [
            //      t.variableDeclarator(id, node)
            //    ]);
            //}
        }
    });
}