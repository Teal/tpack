
var Path = require('path');

/**
 * LESS 解析插件。
 * @this 支持扩展以下字段：
 * * @property {Boolean|Object} [sourceMap=false] 是否生成 SourceMap。如果为对象，则内部配置 SourceMap 的相关配置：
 * * * @property {Boolean} [sourceMapFileInline=false] 是否内联 SourceMap。
 * @param {ProjectFile} file 当前正在生成的文件。可用于获取文件内容和路径。
 * @param {ProjectBuilder} builder 当前生成器。存储生成的相关配置。
 * @returns {Array|String} 返回生成的内容数组。 
 */
module.exports = function (file, builder) {
    var Less = require('less');
    var Lang = require('tealweb/lang');

    var lessOptions = Object.assign({
        syncImport: true,
        relativeUrls: true,
        ignoreIfError: false,
        paths: [Path.dirname(file.src), builder.src],
        filename: file.src
    }, this);

    // 如果存在第二地址，则第二地址是 map 文件路径。
    if (file.relatedFiles) {
        if (lessOptions.sourceMap === true) {
            lessOptions.sourceMap = {};
        }
        lessOptions.sourceMap = lessOptions.sourceMap || {};
        lessOptions.sourceMap.sourceMapFilename = lessOptions.sourceMap.sourceMapFilename || Path.basename(file.relatedFiles[0].dest);
    }

    var content;
    var map;

    Less.render(file.content, lessOptions, function (error, result) {
        if (error) {
            builder.error("{filename}({line}, {column}): {message}", error);
            content = lessOptions.ignoreIfError ? null : String.format("/*\r\n\
\r\n\
\tLess Compilation Error: \r\n\
\t\t{message}\r\n\
\t\tAt {filename}(Line {line}, Col {column})\r\n\
\r\n\
*/\r\n\r\n", error) + file.content;
        } else {
            if (result.map) {
                var mapData = JSON.parse(result.map);
                mapData.sources = [Path.relative(Path.dirname(file.relatedFiles ? file.relatedFiles[0].dest : file.dest), file.src).replace(/\\/g, "/")];
                map = result.map = JSON.stringify(mapData);
            }
            content = result.css;
        }
    });

    return map ? [content, map] : content;
};
